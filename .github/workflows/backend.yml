name: Backend CI
on:
  push:
    paths:
      - ".github/workflows/backend.yml"
      - "backend/**"
      - "!**.md"

defaults:
  run:
    working-directory: backend

jobs:
  Dependencies:
    runs-on: self-hosted
    container: python:3.10.2-alpine
    steps:
      - run: apk add --no-cache tar
      - uses: actions/checkout@v2
      - uses: abatilo/actions-poetry@v2.0.0
      - uses: actions/cache@v2
        id: cache
        with:
          path: ~/.virtualenvs
          key: poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            poetry-${{ hashFiles('**/poetry.lock') }}
      - run: |
          poetry config settings.virtualenvs.in-project false
          poetry config settings.virtualenvs.path ~/.virtualenvs

      - if: steps.cache.outputs.cache-hit != 'true'
        run: apk add gcc musl-dev build-base mariadb-dev libffi-dev

      - if: steps.cache.outputs.cache-hit != 'true'
        run: poetry install

  Test:
    needs: [Dependencies]
    runs-on: self-hosted
    container: python:3.10.2-alpine
    steps:
      - run: apk add --no-cache tar
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: ~/.virtualenvs
          key: poetry-${{ hashFiles('**/poetry.lock') }}

      - run: poetry run pytest

  Lint:
    needs: [Test]
    runs-on: self-hosted
    container: python:3.10.2-alpine
    steps:
      - run: apk add --no-cache tar
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: ~/.virtualenvs
          key: poetry-${{ hashFiles('**/poetry.lock') }}

      - run: poetry run pylint src tests

  Type:
    needs: [Test]
    runs-on: self-hosted
    container: python:3.10.2-alpine
    steps:
      - run: apk add --no-cache tar
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: ~/.virtualenvs
          key: poetry-${{ hashFiles('**/poetry.lock') }}

      - run: poetry run mypy src tests
