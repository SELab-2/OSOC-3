name: Backend CI
on:
  push:
    paths:
      - ".github/workflows/backend.yml"
      - "backend/**"
      - "!**.md"

defaults:
  run:
    working-directory: backend

jobs:
  Dependencies:
    runs-on: self-hosted
    container: python:3.10.2-alpine
    steps:
      - run: apk add --no-cache tar
      - uses: actions/checkout@v2

      - uses: actions/cache@v2
        id: cache
        with:
          path: /usr/local/lib/python3.10/site-packages
          key: venv-${{ runner.os }}-3.10-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            venv-${{ runner.os }}-

      - if: steps.cache.outputs.cache-hit != 'true'
        run: apk add gcc musl-dev build-base mariadb-dev libffi-dev cargo

      - if: steps.cache.outputs.cache-hit != 'true'
        run: |
          pip install -U pip
          pip install poetry

      - if: steps.cache.outputs.cache-hit != 'true'
        run: POETRY_VIRTUALENVS_CREATE=false python -m poetry install -n

  Test:
    needs: [Dependencies]
    runs-on: self-hosted
    container: python:3.10.2-alpine
    steps:
      - run: apk add --no-cache tar
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-3.10-${{ hashFiles('**/poetry.lock') }}

      - run: |
          source .venv/bin/activate
          poetry run pytest

  Lint:
    needs: [Test]
    runs-on: self-hosted
    container: python:3.10.2-alpine
    steps:
      - run: apk add --no-cache tar
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-3.10-${{ hashFiles('**/poetry.lock') }}

      - run: |
          source .venv/bin/activate
          poetry run pylint src tests

  Type:
    needs: [Test]
    runs-on: self-hosted
    container: python:3.10.2-alpine
    steps:
      - run: apk add --no-cache tar
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-3.10-${{ hashFiles('**/poetry.lock') }}

      - run: |
          source .venv/bin/activate
          poetry run mypy src tests
