name: Backend CI
on:
  push:
    paths:
      - ".github/workflows/backend.yml"
      - "backend/**"
      - "!**.md"

defaults:
  run:
    working-directory: backend

env:
  POETRY_VIRTUALENVS_CREATE: false

jobs:
  Dependencies:
    runs-on: self-hosted
    container: python:3.10.2-slim-bullseye
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        id: cache
        with:
          path: /usr/local/lib/python3.10/site-packages
          key: venv-${{ runner.os }}-bullseye-3.10-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            venv-${{ runner.os }}-bullseye-3.10-

      - if: steps.cache.outputs.cache-hit != 'true'
        run: apt update
      
      - if: steps.cache.outputs.cache-hit != 'true'
        run: apt install -y build-essential libmariadb-dev
      
      - if: steps.cache.outputs.cache-hit != 'true'
        run: pip install -U pip poetry

      - if: steps.cache.outputs.cache-hit != 'true'
        run: python -m poetry install -n

  Test:
    needs: [Dependencies]
    runs-on: self-hosted
    container: python:3.10.2-slim-bullseye
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: /usr/local/lib/python3.10/site-packages
          key: venv-${{ runner.os }}-bullseye-3.10-${{ hashFiles('**/poetry.lock') }}

      - run: python -m pytest

  Lint:
    needs: [Test]
    runs-on: self-hosted
    container: python:3.10.2-slim-bullseye
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: /usr/local/lib/python3.10/site-packages
          key: venv-${{ runner.os }}-bullseye-3.10-${{ hashFiles('**/poetry.lock') }}

      - run: python -m pylint src tests

  Type:
    needs: [Test]
    runs-on: self-hosted
    container: python:3.10.2-slim-bullseye
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: /usr/local/lib/python3.10/site-packages
          key: venv-${{ runner.os }}-bullseye-3.10-${{ hashFiles('**/poetry.lock') }}

      - run: python -m mypy src tests
