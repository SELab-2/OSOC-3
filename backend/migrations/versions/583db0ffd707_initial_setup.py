"""Initial Setup

Revision ID: 583db0ffd707
Revises: 
Create Date: 2022-03-02 10:47:45.080366

"""
import sqlalchemy as sa
import sqlalchemy_utils
from alembic import op

# revision identifiers, used by Alembic.
revision = '583db0ffd707'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'editions',
        sa.Column('edition_id', sa.Integer(), nullable=False),
        sa.Column('year', sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint('edition_id')
    )
    op.create_table(
        'invite_links',
        sa.Column('invite_link_id', sa.Integer(), nullable=False),
        sa.Column('uuid', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=True),
        sa.Column('target_email', sa.Text(), nullable=False),
        sa.PrimaryKeyConstraint('invite_link_id')
    )
    op.create_table(
        'partners',
        sa.Column('partner_id', sa.Integer(), nullable=False),
        sa.Column('name', sa.Text(), nullable=False),
        sa.PrimaryKeyConstraint('partner_id'),
        sa.UniqueConstraint('name')
    )
    op.create_table(
        'skills',
        sa.Column('skill_id', sa.Integer(), nullable=False),
        sa.Column('name', sa.Text(), nullable=False),
        sa.Column('description', sa.Text(), nullable=True),
        sa.PrimaryKeyConstraint('skill_id')
    )
    op.create_table(
        'users',
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('name', sa.Text(), nullable=False),
        sa.Column('email', sa.Text(), nullable=False),
        sa.PrimaryKeyConstraint('user_id'),
        sa.UniqueConstraint('email')
    )
    op.create_table(
        'coach_requests',
        sa.Column('request_id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
        sa.PrimaryKeyConstraint('request_id')
    )
    op.create_table(
        'email_auths',
        sa.Column('email_auth_id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('pw_hash', sa.Text(), nullable=False),
        sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
        sa.PrimaryKeyConstraint('email_auth_id')
    )
    op.create_table(
        'github_auths',
        sa.Column('gh_auth_id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
        sa.PrimaryKeyConstraint('gh_auth_id')
    )
    op.create_table(
        'google_auths',
        sa.Column('google_auth_id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
        sa.PrimaryKeyConstraint('google_auth_id')
    )
    op.create_table(
        'projects',
        sa.Column('project_id', sa.Integer(), nullable=False),
        sa.Column('name', sa.Text(), nullable=False),
        sa.Column('number_of_students', sa.Integer(), nullable=False),
        sa.Column('edition_id', sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(['edition_id'], ['editions.edition_id'], ),
        sa.PrimaryKeyConstraint('project_id')
    )
    op.create_table(
        'user_roles',
        sa.Column('user_role_id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=True),
        sa.Column('role', sa.Enum('ADMIN', 'COACH', name='roleenum'), nullable=True),
        sa.Column('edition_id', sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(['edition_id'], ['editions.edition_id'], ),
        sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
        sa.PrimaryKeyConstraint('user_role_id')
    )
    op.create_table(
        'webhooks',
        sa.Column('webhook_id', sa.Integer(), nullable=False),
        sa.Column('edition_id', sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(['edition_id'], ['editions.edition_id'], ),
        sa.PrimaryKeyConstraint('webhook_id')
    )
    op.create_table(
        'project_coaches',
        sa.Column('project_id', sa.Integer(), nullable=False),
        sa.Column('coach_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['coach_id'], ['users.user_id'], ),
        sa.ForeignKeyConstraint(['project_id'], ['projects.project_id'], ),
        sa.PrimaryKeyConstraint('project_id', 'coach_id')
    )
    op.create_table(
        'project_partners',
        sa.Column('project_id', sa.Integer(), nullable=False),
        sa.Column('partner_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['partner_id'], ['partners.partner_id'], ),
        sa.ForeignKeyConstraint(['project_id'], ['projects.project_id'], ),
        sa.PrimaryKeyConstraint('project_id', 'partner_id')
    )
    op.create_table(
        'project_skills',
        sa.Column('project_id', sa.Integer(), nullable=False),
        sa.Column('skill_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['project_id'], ['projects.project_id'], ),
        sa.ForeignKeyConstraint(['skill_id'], ['skills.skill_id'], ),
        sa.PrimaryKeyConstraint('project_id', 'skill_id')
    )
    op.create_table(
        'students',
        sa.Column('student_id', sa.Integer(), nullable=False),
        sa.Column('name', sa.Text(), nullable=False),
        sa.Column('email_address', sa.Text(), nullable=False),
        sa.Column('phone_number', sa.Text(), nullable=True),
        sa.Column('alumni', sa.Boolean(), nullable=False),
        sa.Column('cv_webhook_id', sa.Integer(), nullable=True),
        sa.Column('decision', sa.Enum('UNDECIDED', 'YES', 'MAYBE', 'NO', name='decisionenum'),
                  nullable=True),
        sa.Column('wants_to_be_student_coach', sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(['cv_webhook_id'], ['webhooks.webhook_id'], ),
        sa.PrimaryKeyConstraint('student_id'),
        sa.UniqueConstraint('email_address'),
        sa.UniqueConstraint('phone_number')
    )
    op.create_table(
        'decision_emails',
        sa.Column('email_id', sa.Integer(), nullable=False),
        sa.Column('student_id', sa.Integer(), nullable=False),
        sa.Column('decision', sa.Enum('UNDECIDED', 'YES', 'MAYBE', 'NO', name='decisionenum'),
                  nullable=False),
        sa.Column('date', sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(['student_id'], ['students.student_id'], ),
        sa.PrimaryKeyConstraint('email_id')
    )
    op.create_table(
        'project_roles',
        sa.Column('student_id', sa.Integer(), nullable=False),
        sa.Column('project_id', sa.Integer(), nullable=False),
        sa.Column('skill_id', sa.Integer(), nullable=False),
        sa.Column('definitive', sa.Boolean(), nullable=False),
        sa.Column('argumentation', sa.Text(), nullable=True),
        sa.Column('drafter_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['drafter_id'], ['users.user_id'], ),
        sa.ForeignKeyConstraint(['project_id'], ['projects.project_id'], ),
        sa.ForeignKeyConstraint(['skill_id'], ['skills.skill_id'], ),
        sa.ForeignKeyConstraint(['student_id'], ['students.student_id'], ),
        sa.PrimaryKeyConstraint('student_id', 'project_id', 'skill_id')
    )
    op.create_table(
        'student_skills',
        sa.Column('student_id', sa.Integer(), nullable=False),
        sa.Column('skill_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['skill_id'], ['skills.skill_id'], ),
        sa.ForeignKeyConstraint(['student_id'], ['students.student_id'], ),
        sa.PrimaryKeyConstraint('student_id', 'skill_id')
    )
    op.create_table(
        'suggestions',
        sa.Column('suggestion_id', sa.Integer(), nullable=False),
        sa.Column('student_id', sa.Integer(), nullable=False),
        sa.Column('coach_id', sa.Integer(), nullable=False),
        sa.Column('suggestion', sa.Enum('UNDECIDED', 'YES', 'MAYBE', 'NO', name='decisionenum'),
                  nullable=False),
        sa.Column('argumentation', sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(['coach_id'], ['users.user_id'], ),
        sa.ForeignKeyConstraint(['student_id'], ['students.student_id'], ),
        sa.PrimaryKeyConstraint('suggestion_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('suggestions')
    op.drop_table('student_skills')
    op.drop_table('project_roles')
    op.drop_table('decision_emails')
    op.drop_table('students')
    op.drop_table('project_skills')
    op.drop_table('project_partners')
    op.drop_table('project_coaches')
    op.drop_table('webhooks')
    op.drop_table('user_roles')
    op.drop_table('projects')
    op.drop_table('google_auths')
    op.drop_table('github_auths')
    op.drop_table('email_auths')
    op.drop_table('coach_requests')
    op.drop_table('users')
    op.drop_table('skills')
    op.drop_table('partners')
    op.drop_table('invite_links')
    op.drop_table('editions')
    # ### end Alembic commands ###
